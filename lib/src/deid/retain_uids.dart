// Copyright (c) 2016, Open DICOMweb Project. All rights reserved.
// Use of this source code is governed by the open source license
// that can be found in the LICENSE file.
// Author: Jim Philbin <jfphilbin@gmail.edu> -
// See the AUTHORS file for other contributors.

// *** This file generated by '../bin/generate/generate_basic_profile.dart' ***
// ----------------------------------------------------------

import 'package:deid/src/deid/action.dart';

class RetainUidsOption {
  final int tag;
  final String keyword;
  final Action action;

  const RetainUidsOption(this.tag, this.keyword, this.action);

  static lookup(int tag) => map[tag];

  static const kAffectedSOPInstanceUID = const RetainUidsOption(0x00001000, "AffectedSOPInstanceUID", Action.K);
  static const kConcatenationUID = const RetainUidsOption(0x00209161, "ConcatenationUID", Action.K);
  static const kContextGroupExtensionCreatorUID = const RetainUidsOption(0x0008010D, "ContextGroupExtensionCreatorUID", Action.K);
  static const kCreatorVersionUID = const RetainUidsOption(0x00089123, "CreatorVersionUID", Action.K);
  static const kDeviceUID = const RetainUidsOption(0x00181002, "DeviceUID", Action.K);
  static const kDimensionOrganizationUID = const RetainUidsOption(0x00209164, "DimensionOrganizationUID", Action.K);
  static const kDoseReferenceUID = const RetainUidsOption(0x300A0013, "DoseReferenceUID", Action.K);
  static const kFailedSOPInstanceUIDList = const RetainUidsOption(0x00080058, "FailedSOPInstanceUIDList", Action.K);
  static const kFiducialUID = const RetainUidsOption(0x0070031A, "FiducialUID", Action.K);
  static const kFrameofReferenceUID = const RetainUidsOption(0x00200052, "FrameofReferenceUID", Action.K);
  static const kInstanceCreatorUID = const RetainUidsOption(0x00080014, "InstanceCreatorUID", Action.K);
  static const kIrradiationEventUID = const RetainUidsOption(0x00083010, "IrradiationEventUID", Action.K);
  static const kLargePaletteColorLookupTableUID = const RetainUidsOption(0x00281214, "LargePaletteColorLookupTableUID", Action.K);
  static const kMediaStorageSOPInstanceUID = const RetainUidsOption(0x00020003, "MediaStorageSOPInstanceUID", Action.K);
  static const kPaletteColorLookupTableUID = const RetainUidsOption(0x00281199, "PaletteColorLookupTableUID", Action.K);
  static const kReferencedFrameofReferenceUID = const RetainUidsOption(0x30060024, "ReferencedFrameofReferenceUID", Action.K);
  static const kReferencedGeneralPurposeScheduledProcedureStepTransactionUID = const RetainUidsOption(0x00404023, "ReferencedGeneralPurposeScheduledProcedureStepTransactionUID", Action.K);
  static const kReferencedImageSequence = const RetainUidsOption(0x00081140, "ReferencedImageSequence", Action.K);
  static const kReferencedPatientSequence = const RetainUidsOption(0x00081120, "ReferencedPatientSequence", Action.X);
  static const kReferencedPerformedProcedureStepSequence = const RetainUidsOption(0x00081111, "ReferencedPerformedProcedureStepSequence", Action.K);
  static const kReferencedSOPInstanceUID = const RetainUidsOption(0x00081155, "ReferencedSOPInstanceUID", Action.K);
  static const kReferencedSOPInstanceUIDinFile = const RetainUidsOption(0x00041511, "ReferencedSOPInstanceUIDinFile", Action.K);
  static const kReferencedStudySequence = const RetainUidsOption(0x00081110, "ReferencedStudySequence", Action.K);
  static const kRelatedFrameofReferenceUID = const RetainUidsOption(0x300600C2, "RelatedFrameofReferenceUID", Action.K);
  static const kRequestedSOPInstanceUID = const RetainUidsOption(0x00001001, "RequestedSOPInstanceUID", Action.K);
  static const kSeriesInstanceUID = const RetainUidsOption(0x0020000E, "SeriesInstanceUID", Action.K);
  static const kSOPInstanceUID = const RetainUidsOption(0x00080018, "SOPInstanceUID", Action.K);
  static const kSourceImageSequence = const RetainUidsOption(0x00082112, "SourceImageSequence", Action.K);
  static const kStorageMediaFile_setUID = const RetainUidsOption(0x00880140, "StorageMediaFile_setUID", Action.K);
  static const kStudyInstanceUID = const RetainUidsOption(0x0020000D, "StudyInstanceUID", Action.K);
  static const kSynchronizationFrameofReferenceUID = const RetainUidsOption(0x00200200, "SynchronizationFrameofReferenceUID", Action.K);
  static const kTemplateExtensionCreatorUID = const RetainUidsOption(0x0040DB0D, "TemplateExtensionCreatorUID", Action.K);
  static const kTemplateExtensionOrganizationUID = const RetainUidsOption(0x0040DB0C, "TemplateExtensionOrganizationUID", Action.K);
  static const kTransactionUID = const RetainUidsOption(0x00081195, "TransactionUID", Action.K);


  static const Map<int, String> map = const {
    0x00001000: kAffectedSOPInstanceUID,
    0x00209161: kConcatenationUID,
    0x0008010D: kContextGroupExtensionCreatorUID,
    0x00089123: kCreatorVersionUID,
    0x00181002: kDeviceUID,
    0x00209164: kDimensionOrganizationUID,
    0x300A0013: kDoseReferenceUID,
    0x00080058: kFailedSOPInstanceUIDList,
    0x0070031A: kFiducialUID,
    0x00200052: kFrameofReferenceUID,
    0x00080014: kInstanceCreatorUID,
    0x00083010: kIrradiationEventUID,
    0x00281214: kLargePaletteColorLookupTableUID,
    0x00020003: kMediaStorageSOPInstanceUID,
    0x00281199: kPaletteColorLookupTableUID,
    0x30060024: kReferencedFrameofReferenceUID,
    0x00404023: kReferencedGeneralPurposeScheduledProcedureStepTransactionUID,
    0x00081140: kReferencedImageSequence,
    0x00081120: kReferencedPatientSequence,
    0x00081111: kReferencedPerformedProcedureStepSequence,
    0x00081155: kReferencedSOPInstanceUID,
    0x00041511: kReferencedSOPInstanceUIDinFile,
    0x00081110: kReferencedStudySequence,
    0x300600C2: kRelatedFrameofReferenceUID,
    0x00001001: kRequestedSOPInstanceUID,
    0x0020000E: kSeriesInstanceUID,
    0x00080018: kSOPInstanceUID,
    0x00082112: kSourceImageSequence,
    0x00880140: kStorageMediaFile_setUID,
    0x0020000D: kStudyInstanceUID,
    0x00200200: kSynchronizationFrameofReferenceUID,
    0x0040DB0D: kTemplateExtensionCreatorUID,
    0x0040DB0C: kTemplateExtensionOrganizationUID,
    0x00081195: kTransactionUID};

  static const List<int> keys = const [
    0x00001000,
    0x00209161,
    0x0008010D,
    0x00089123,
    0x00181002,
    0x00209164,
    0x300A0013,
    0x00080058,
    0x0070031A,
    0x00200052,
    0x00080014,
    0x00083010,
    0x00281214,
    0x00020003,
    0x00281199,
    0x30060024,
    0x00404023,
    0x00081140,
    0x00081120,
    0x00081111,
    0x00081155,
    0x00041511,
    0x00081110,
    0x300600C2,
    0x00001001,
    0x0020000E,
    0x00080018,
    0x00082112,
    0x00880140,
    0x0020000D,
    0x00200200,
    0x0040DB0D,
    0x0040DB0C,
    0x00081195];

  static const List<String> values = const [
    kAffectedSOPInstanceUID,
    kConcatenationUID,
    kContextGroupExtensionCreatorUID,
    kCreatorVersionUID,
    kDeviceUID,
    kDimensionOrganizationUID,
    kDoseReferenceUID,
    kFailedSOPInstanceUIDList,
    kFiducialUID,
    kFrameofReferenceUID,
    kInstanceCreatorUID,
    kIrradiationEventUID,
    kLargePaletteColorLookupTableUID,
    kMediaStorageSOPInstanceUID,
    kPaletteColorLookupTableUID,
    kReferencedFrameofReferenceUID,
    kReferencedGeneralPurposeScheduledProcedureStepTransactionUID,
    kReferencedImageSequence,
    kReferencedPatientSequence,
    kReferencedPerformedProcedureStepSequence,
    kReferencedSOPInstanceUID,
    kReferencedSOPInstanceUIDinFile,
    kReferencedStudySequence,
    kRelatedFrameofReferenceUID,
    kRequestedSOPInstanceUID,
    kSeriesInstanceUID,
    kSOPInstanceUID,
    kSourceImageSequence,
    kStorageMediaFile_setUID,
    kStudyInstanceUID,
    kSynchronizationFrameofReferenceUID,
    kTemplateExtensionCreatorUID,
    kTemplateExtensionOrganizationUID,
    kTransactionUID];



}
  